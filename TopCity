-- Anti-cheat event bypass script with remote blocking
local eventbypass

eventbypass = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()

    if not checkcaller() then
        if method == "FireServer" then
            -- Check if this remote is not in the ignored list and block it if detected
            if knownRemotes[self:GetDebugId()] then
                print("Blocked remote call to:", self.Name)
                return wait(9e9)  -- Block the remote by pausing execution indefinitely
            end
        end
    end

    return eventbypass(self, ...)
end)

-- Get player and disable specified scripts
local PlayersService = game:GetService("Players")
local player = PlayersService:FindFirstChild("1_ALsfaH")

if player then
    local playerScripts = player:FindFirstChild("PlayerScripts")
    
    if playerScripts then
        local acBackup = playerScripts:FindFirstChild("AC_Backup")
        local acPlayer = playerScripts:FindFirstChild("AC_Player")
        local playerControl = playerScripts:FindFirstChild("PlayerControl")

        if acBackup then
            acBackup.Disabled = true
            print("Disabled script:", acBackup:GetFullName())
        else
            warn("AC_Backup script not found.")
        end

        if acPlayer then
            acPlayer.Disabled = true
            print("Disabled script:", acPlayer:GetFullName())
        else
            warn("AC_Player script not found.")
        end

        if playerControl then
            playerControl.Disabled = true
            print("Disabled script:", playerControl:GetFullName())
        else
            warn("PlayerControl script not found.")
        end
    else
        warn("PlayerScripts not found in the player.")
    end
else
    warn("Player '1_ALsfaH' not found.")
end

-- Remote detection with ignore list and blocking mechanism
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local targetParent = ReplicatedStorage:FindFirstChild("Remotes")

-- List of remotes to ignore by their name
local ignoredRemotes = {
    "AcceptTradeRequestEvent",
    "AdminAppEvent",
    "AdminBtnsrEvent",
    "AlrajhiAppEvent",
    "AlrajhiWithdrawDeposit",
    "AsefneAcceptEvent",
    "AsefneFinishEvent",
    "AsefneRequestEvent",
    "BanAppCheakBanEvent",
    "BanAppGiveBanEvent",
    "BanAppRemvBanEvent",
    "BuyClothEvent",
    "BuyShopEvent",
    "CancelTradeRequestEvent",
    "CarShopSellEvent",
    "CarShopSpawnEvent",
    "CarsGarageSpawnEvent",
    "CarsShopBuyEvent",
    "ChangeGuiTextAndColorEvent",
    "ChangeGuiVisibleEvent",
    "ChangePlayerCameraEvent",
    "ChangeServerPropertiesEvent",
    "CloseTradeRequestEvent",
    "ClothsShopBuyEvent",
    "ClothsShopCharsBtnEvent",
    "ClothsShopRestCharEvent",
    "ClothsShopUpdateCharEvent",
    "ClothsShopUpdateGuiEvent",
    "ClothsShopUseEvent",
    "CraftItemCraftingTableEvent",
    "CreateCharFinishEvent",
    "CreateNewToolEvent",
    "CreateCharUpdateEvent",
    "CropPlantEvent",
    "DeliverCargoEvent",
    "DisablePlayerEvent",
    "DoctorReviveEvent",
    "DoctorHealEvent",
    "DrawWayPointsEvent",
    "FinishTradeRequestEvent",
    "FireJobMemberListEvent",
    "ForceStopAnimsEvent",
    "GetJobMemberListEvent",
    "GiveFineEvent",
    "GivePlayerJobPointsEvent",
    "GiveReportEvent",
    "GvePlayerBehivePointsEvent",
    "HideShowClothsEvent",
    "HumPropValidEvent",
    "InventoryAddToolEvent",
    "InventoryDestroyEvent",
    "InventoryGetTargetEvent",
    "InventoryRemvToolEvent",
    "InventoryRighClickEvent",
    "InventorySwapEvent",
    "JobDeviceFireEvent",
    "JobDeviceHairEvent",
    "JobSelectEvent",
    "JobUpgradeEvent",
    "KidnappingEvent",
    "LockTradeRequestEvent",
    "LockpickPrisonOpen",
    "LockpickTargetUnlockEvent",
    "MoveToolToBagEvent",
    "OpenGarageJobEvent",
    "OpenShopEvent",
    "OpenWhereHouseEvent",
    "PartPropValidEvent",
    "PickupCargoEvent",
    "PlayAnimsEvent",
    "PlaySoundToPlayerEvent",
    "PlayerPrisonFromDiffScript",
    "PoliceCarryEvent",
    "PoliceGiveFine",
    "PoliceHandCuffEvent",
    "PoliceSendPrisonEvent",
    "PoliceSerchEvent",
    "PoliceUnHandCuffEvent",
    "PopGuiEvent",
    "ProfileRestStateEvent",
    "ProfileUpStateEvent",
    "RadioEnterEvent",
    "RadioLeaveEvent",
    "RadioSendMsgEvent",
    "ReducePlayerLaborEvent",
    "ReflectTradeRequestEvent",
    "ResourceSellEvent",
    "RunWorldEvent",
    "SalaryNotifiyEvent",
    "SendTradeRequestEvent",
    "ShopGemsBuyEvents",
    "StealShopEvent",
    "SpawnGarageJobEvent",
    "StoreCarToPlrCarsEvent",
    "ToolHealthReduceClintEvent",
    "ToolHealthReduceServerEvent",
    "UnHandCuffGuiBtnEvent",
    "UpDateVipJobsEvent",
    "changeClientPropertiesEvent"
}

-- Table to store last known names of detected remotes
local knownRemotes = {}

-- Check each remote once and block if not ignored
if targetParent then
    for _, child in pairs(targetParent:GetChildren()) do
        if child:IsA("RemoteEvent") then
            local currentName = child.Name

            -- Skip and allow if the remote is in the ignored list
            if not table.find(ignoredRemotes, currentName) then
                -- Print the remote's name if it's not in the ignored list
                print("Detected and blocked remote: " .. currentName)

                -- Store this remote in knownRemotes for blocking in the eventbypass
                knownRemotes[child:GetDebugId()] = currentName
            end
        end
    end
else
    print("No 'Remotes' folder found in ReplicatedStorage.")
end

print("Script execution completed.")
